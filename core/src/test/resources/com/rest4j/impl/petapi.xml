<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<api xmlns="http://rest4j.com/api-description" xmlns:html="http://www.w3.org/1999/xhtml">

	<model name="Pet" class="com.rest4j.impl.petapi.Pet" field-mapper="petMapping">
		<fields>
			<simple name="id" type="number" access="readonly" nullable="false"/>
			<simple name="type" type="string" default="dog" nullable="true">
				<description><html:title>xxx</html:title><html:a href="test" client-lang="*">test</html:a></description>
				<values>
					<value>dog</value>
					<value>cat</value>
					<value>hamster</value>
				</values>
			</simple>
			<simple name="name" type="string" nullable="false"/>
			<simple name="weight" type="number" prop="petWeight" nullable="true"/>
			<simple name="gender" type="string" nullable="false">
				<values>
					<value>male</value>
					<value>female</value>
				</values>
			</simple>
			<simple name="writeonly" type="boolean" access="writeonly" nullable="true"/>
			<complex name="relations" collection="array" type="PetRelation" mapping-method="petRelations" nullable="false" default="empty"/>
		</fields>
	</model>

	<model name="PetRelation" class="com.rest4j.impl.petapi.PetRelation">
		<fields>
			<simple name="type" type="string" default="friend" nullable="false">
				<values>
					<value>friend</value>
					<value>mated</value>
					<value>ate</value>
				</values>
			</simple>
			<simple name="petId" type="number" nullable="false"/>
		</fields>
	</model>
	
	<model name="UpdateResult" class="com.rest4j.impl.petapi.UpdateResult">
		<fields>
			<simple name="id" type="number" nullable="true"></simple>
		</fields>
	</model>

	<model name="Error" class="com.rest4j.impl.petapi.PetIndisposedException">
		<fields>
			<simple name="code" type="string" nullable="false"/>
			<simple name="param" type="string" nullable="true"/>
		</fields>
	</model>

	<endpoint http="GET">
		<route>/pets</route>
		<description></description>
		<parameters>
			<parameter name="type" type="string">
				<values>
					<value>dog</value>
					<value>cat</value>
					<value>hamster</value>
				</values>
			</parameter>
		</parameters>
		<response>
			<json collection="array" type="Pet"/>
		</response>
		<errors></errors>
		<service name="pets" method="list"/>
	</endpoint>

	<endpoint http="POST">
		<route>/pets</route>
		<description></description>
		<parameters>
			<parameter name="access_token" optional="false" type="string"/>
		</parameters>
		<body>
			<json type="Pet"/>
		</body>
		<response>
			<json type="UpdateResult"/>
		</response>
		<errors></errors>
		<service name="pets" method="create"/>
	</endpoint>
	
	<endpoint http="DELETE">
		<route>/pets/<param>id</param></route>
		<description></description>
		<parameters>
			<parameter name="access_token" optional="false" type="string"/>
			<parameter name="id" optional="false" type="number"/>
		</parameters>
		<errors></errors>
		<service name="pets" method="delete"/>
	</endpoint>
	
	<endpoint http="GET">
		<route>/pets/<param>id</param></route>
		<description></description>
		<parameters>
			<parameter name="id" optional="false" type="number"/>
		</parameters>
		<response>
			<json type="Pet"/>
		</response>
		<errors></errors>
		<service name="pets" method="get"/>
	</endpoint>

	<endpoint http="PUT">
		<route>/pets/<param>id</param></route>
		<description></description>
		<parameters>
			<parameter name="access_token" optional="false" type="string"/>
			<parameter name="id" optional="false" type="number"/>
		</parameters>
		<body>
			<patch type="Pet"/>
		</body>
		<errors></errors>
		<service name="pets"/>
	</endpoint>

	<endpoint http="PATCH">
		<route>/pets/<param>id</param></route>
		<description></description>
		<parameters>
			<parameter name="id" optional="false" type="number"/>
		</parameters>
		<body>
			<patch type="Pet"/>
		</body>
		<errors></errors>
		<service name="pets"/>
	</endpoint>
</api>